D G "__PCH__" 0 203 ""4.074""
D G "__DEVICE__" 0 203 "2550"
D G "__DATE__" 0 203 ""03-mai-16""
D G "__TIME__" 0 203 ""14:21:11"" "Standard Header file for the PIC18F2550 device ////////////////"
d G "PIN_A0" 1 27 "31744"
d G "PIN_A1" 1 28 "31745"
d G "PIN_A2" 1 29 "31746"
d G "PIN_A3" 1 30 "31747"
d G "PIN_A4" 1 31 "31748"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_B0" 1 35 "31752"
d G "PIN_B1" 1 36 "31753"
d G "PIN_B2" 1 37 "31754"
d G "PIN_B3" 1 38 "31755"
d G "PIN_B4" 1 39 "31756"
d G "PIN_B5" 1 40 "31757"
d G "PIN_B6" 1 41 "31758"
d G "PIN_B7" 1 42 "31759"
d G "PIN_C0" 1 44 "31760"
d G "PIN_C1" 1 45 "31761"
d G "PIN_C2" 1 46 "31762"
d G "PIN_C3" 1 47 "31763"
d G "PIN_C4" 1 48 "31764"
d G "PIN_C5" 1 49 "31765"
d G "PIN_C6" 1 50 "31766"
d G "PIN_C7" 1 51 "31767"
d G "PIN_E3" 1 53 "31779"
d G "FALSE" 1 56 "0"
d G "TRUE" 1 57 "1"
d G "BYTE" 1 59 "int8"
d G "BOOLEAN" 1 60 "int1"
d G "getc" 1 62 "getch"
d G "fgetc" 1 63 "getch"
d G "getchar" 1 64 "getch"
d G "putc" 1 65 "putchar"
d G "fputc" 1 66 "putchar"
d G "fgets" 1 67 "gets"
d G "fputs" 1 68 "puts"
d G "WDT_TIMEOUT" 1 74 "7"
d G "MCLR_FROM_SLEEP" 1 75 "11"
d G "MCLR_FROM_RUN" 1 76 "15"
d G "NORMAL_POWER_UP" 1 77 "12"
d G "BROWNOUT_RESTART" 1 78 "14"
d G "WDT_FROM_SLEEP" 1 79 "3"
d G "RESET_INSTRUCTION" 1 80 "0"
d G "RTCC_INTERNAL" 1 86 "0"
d G "RTCC_EXT_L_TO_H" 1 87 "32"
d G "RTCC_EXT_H_TO_L" 1 88 "48"
d G "RTCC_DIV_1" 1 90 "8"
d G "RTCC_DIV_2" 1 91 "0"
d G "RTCC_DIV_4" 1 92 "1"
d G "RTCC_DIV_8" 1 93 "2"
d G "RTCC_DIV_16" 1 94 "3"
d G "RTCC_DIV_32" 1 95 "4"
d G "RTCC_DIV_64" 1 96 "5"
d G "RTCC_DIV_128" 1 97 "6"
d G "RTCC_DIV_256" 1 98 "7"
d G "RTCC_OFF" 1 100 "0x80"
d G "RTCC_8_BIT" 1 102 "0x40"
d G "WDT_ON" 1 113 "0x100"
d G "WDT_OFF" 1 114 "0"
d G "T1_DISABLED" 1 120 "0"
d G "T1_INTERNAL" 1 121 "0x85"
d G "T1_EXTERNAL" 1 122 "0x87"
d G "T1_EXTERNAL_SYNC" 1 123 "0x83"
d G "T1_CLK_OUT" 1 125 "8"
d G "T1_DIV_BY_1" 1 127 "0"
d G "T1_DIV_BY_2" 1 128 "0x10"
d G "T1_DIV_BY_4" 1 129 "0x20"
d G "T1_DIV_BY_8" 1 130 "0x30"
d G "T2_DISABLED" 1 135 "0"
d G "T2_DIV_BY_1" 1 136 "4"
d G "T2_DIV_BY_4" 1 137 "5"
d G "T2_DIV_BY_16" 1 138 "6"
d G "T3_DISABLED" 1 144 "0"
d G "T3_INTERNAL" 1 145 "0x85"
d G "T3_EXTERNAL" 1 146 "0x87"
d G "T3_EXTERNAL_SYNC" 1 147 "0x83"
d G "T3_DIV_BY_1" 1 149 "0"
d G "T3_DIV_BY_2" 1 150 "0x10"
d G "T3_DIV_BY_4" 1 151 "0x20"
d G "T3_DIV_BY_8" 1 152 "0x30"
d G "T3_CCP1_TO_2" 1 155 "0x48"
d G "T3_CCP2" 1 156 "0x8"
d G "CCP_OFF" 1 162 "0"
d G "CCP_CAPTURE_FE" 1 163 "4"
d G "CCP_CAPTURE_RE" 1 164 "5"
d G "CCP_CAPTURE_DIV_4" 1 165 "6"
d G "CCP_CAPTURE_DIV_16" 1 166 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 167 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 168 "9"
d G "CCP_COMPARE_INT" 1 169 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 170 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 171 "0xB"
d G "CCP_PWM" 1 172 "0xC"
d G "CCP_PWM_PLUS_1" 1 173 "0x1c"
d G "CCP_PWM_PLUS_2" 1 174 "0x2c"
d G "CCP_PWM_PLUS_3" 1 175 "0x3c"
v G "CCP_1" 1 177 "int16"
v G "CCP_2" 1 181 "int16"
d G "SPI_MASTER" 1 188 "0x20"
d G "SPI_SLAVE" 1 189 "0x24"
d G "SPI_L_TO_H" 1 190 "0"
d G "SPI_H_TO_L" 1 191 "0x10"
d G "SPI_CLK_DIV_4" 1 192 "0"
d G "SPI_CLK_DIV_16" 1 193 "1"
d G "SPI_CLK_DIV_64" 1 194 "2"
d G "SPI_CLK_T2" 1 195 "3"
d G "SPI_SS_DISABLED" 1 196 "1"
d G "SPI_SAMPLE_AT_END" 1 198 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 199 "0x4000"
d G "UART_ADDRESS" 1 205 "2"
d G "UART_DATA" 1 206 "4"
d G "UART_AUTODETECT" 1 207 "8"
d G "UART_AUTODETECT_NOWAIT" 1 208 "9"
d G "UART_WAKEUP_ON_RDA" 1 209 "10"
d G "UART_SEND_BREAK" 1 210 "13"
d G "A0_A3_A1_A3" 1 214 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 215 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 216 "0xbcf05"
d G "NC_NC_NC_NC" 1 217 "0x0ff07"
d G "A0_A3_A1_A2" 1 218 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 219 "0x9ef01"
d G "A0_VR_A1_VR" 1 220 "0x3ff06"
d G "A3_VR_A2_VR" 1 221 "0xcff0e"
d G "CP1_INVERT" 1 222 "0x0000010"
d G "CP2_INVERT" 1 223 "0x0000020"
d G "VREF_LOW" 1 231 "0xa0"
d G "VREF_HIGH" 1 232 "0x80"
d G "VREF_F5" 1 234 "0x40"
d G "VREF_COMP" 1 235 "0x10"
d G "LVD_LVDIN" 1 240 "0x1F"
d G "LVD_45" 1 241 "0x1E"
d G "LVD_42" 1 242 "0x1D"
d G "LVD_40" 1 243 "0x1C"
d G "LVD_38" 1 244 "0x1B"
d G "LVD_36" 1 245 "0x1A"
d G "LVD_35" 1 246 "0x19"
d G "LVD_33" 1 247 "0x18"
d G "LVD_30" 1 248 "0x17"
d G "LVD_28" 1 249 "0x16"
d G "LVD_27" 1 250 "0x15"
d G "LVD_25" 1 251 "0x14"
d G "LVD_24" 1 252 "0x13"
d G "LVD_23" 1 253 "0x12"
d G "LVD_22" 1 254 "0x11"
d G "LVD_21" 1 255 "0x10"
d G "LVD_TRIGGER_BELOW" 1 257 "0"
d G "LVD_TRIGGER_ABOVE" 1 258 "0x80"
d G "OSC_31KHZ" 1 264 "0"
d G "OSC_125KHZ" 1 265 "0x10"
d G "OSC_250KHZ" 1 266 "0x20"
d G "OSC_500KHZ" 1 267 "0x30"
d G "OSC_1MHZ" 1 268 "0x40"
d G "OSC_2MHZ" 1 269 "0x50"
d G "OSC_4MHZ" 1 270 "0x60"
d G "OSC_8MHZ" 1 271 "0x70"
d G "OSC_16MHZ" 1 272 "0x4060"
d G "OSC_32MHZ" 1 273 "0x4070"
d G "OSC_TIMER1" 1 275 "1"
d G "OSC_INTRC" 1 276 "2"
d G "OSC_NORMAL" 1 277 "0"
d G "OSC_IDLE_MODE" 1 279 "0x80"
d G "OSC_31250" 1 280 "0x8000"
d G "OSC_PLL_ON" 1 281 "0x4000"
d G "OSC_PLL_OFF" 1 282 "0"
d G "OSC_STATE_STABLE" 1 286 "4"
d G "OSC_STATE_EXT_RUNNING" 1 287 "8"
d G "ADC_OFF" 1 294 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 295 "0x100"
d G "ADC_CLOCK_DIV_4" 1 296 "0x04"
d G "ADC_CLOCK_DIV_8" 1 297 "0x01"
d G "ADC_CLOCK_DIV_16" 1 298 "0x05"
d G "ADC_CLOCK_DIV_32" 1 299 "0x02"
d G "ADC_CLOCK_DIV_64" 1 300 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 301 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 304 "0x0F" "None"
d G "ALL_ANALOG" 1 305 "0x00" "A0 A1 A2 A3 A5 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 306 "0x03" "A0 A1 A2 A3 A5 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 307 "0x04" "A0 A1 A2 A3 A5 B2 B3 B1"
d G "AN0_TO_AN9" 1 308 "0x05" "A0 A1 A2 A3 A5 B2 B3"
d G "AN0_TO_AN8" 1 309 "0x06" "A0 A1 A2 A3 A5 B2"
d G "AN0_TO_AN4" 1 310 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 311 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 312 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 313 "0x0D" "A0 A1"
d G "AN0" 1 314 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 315 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 316 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 317 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 318 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 319 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 320 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 321 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 322 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 323 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 326 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 327 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 328 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 329 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 333 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 334 "1"
d G "ADC_READ_ONLY" 1 335 "6"
d G "L_TO_H" 1 347 "0x40"
d G "H_TO_L" 1 348 "0"
d G "GLOBAL" 1 350 "0xF2C0"
d G "INT_RTCC" 1 351 "0xF220"
d G "INT_TIMER0" 1 352 "0xF220"
d G "INT_TIMER1" 1 353 "0x9D01"
d G "INT_TIMER2" 1 354 "0x9D02"
d G "INT_TIMER3" 1 355 "0xA002"
d G "INT_EXT" 1 356 "0xF210"
d G "INT_EXT1" 1 357 "0xF008"
d G "INT_EXT2" 1 358 "0xF010"
d G "INT_RB" 1 359 "0xFFF208"
d G "INT_AD" 1 360 "0x9D40"
d G "INT_RDA" 1 361 "0x9D20"
d G "INT_TBE" 1 362 "0x9D10"
d G "INT_SSP" 1 363 "0x9D08"
d G "INT_CCP1" 1 364 "0x9D04"
d G "INT_CCP2" 1 365 "0xA001"
d G "INT_BUSCOL" 1 366 "0xA008"
d G "INT_LOWVOLT" 1 367 "0xA004"
d G "INT_COMP" 1 368 "0xA040"
d G "INT_EEPROM" 1 369 "0xA010"
d G "INT_OSCF" 1 370 "0xA080"
d G "INT_USB" 1 371 "0xA020"
D G "_STDLIB" 2 12 ""
D G "RAND_MAX" 2 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 2 25 "1"
T G "div_t" 2 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 2 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 3 13 ""
D G "ptrdiff_t" 3 18 "unsigned int16"
D G "size_t" 3 21 "unsigned int8"
D G "wchar_t" 3 22 "char"
D G "NULL" 3 23 "0"
D G "offsetof" 3 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 2 43 2 "FUNCTION"
C L "atof" 2 46 1 "*"
C L "atof" 2 46 1 "*"
V L "s" 2 50 "*int8"
F G "atof" 2 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 2 76 1 "*"
C L "atof" 2 76 1 "*"
C L "atof" 2 76 1 "*"
V L "s" 2 82 "*int8"
F G "atoe" 2 82 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 2 89 1 "*"
C L "atoe" 2 89 1 "*"
V L "s" 2 93 "*int8"
F G "atoi" 2 93 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 2 101 "*int8"
F G "atoi32" 2 101 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 2 89 2 "FUNCTION"
V L "num" 2 122 "sint32"
V L "base" 2 122 "int8"
V L "s" 2 122 "*int8"
F G "itoa" 2 122 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 2 124 1 "*"
C L "itoa" 2 124 1 "*"
V L "s" 2 128 "*int8"
F G "atol" 2 128 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 2 130 1 "*"
C L "atol" 2 130 1 "*"
C L "atol" 2 130 3 "*"
V L "s" 2 138 "*int8"
V L "endptr" 2 138 "*int8"
F G "strtod" 2 138 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 2 130 2 "FUNCTION"
C L "strtod" 2 141 1 "*"
C L "strtod" 2 141 1 "*"
C L "strtod" 2 141 2 "*"
C L "strtod" 2 154 1 "*"
C L "strtod" 2 154 1 "*"
C L "strtod" 2 154 1 "*"
C L "strtod" 2 154 1 "*"
V L "s" 2 160 "*int8"
V L "endptr" 2 160 "*int8"
V L "base" 2 160 "sint8"
F G "strtol" 2 160 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 2 162 1 "*"
C L "strtol" 2 162 1 "*"
C L "strtol" 2 162 1 "*"
C L "strtol" 2 162 1 "*"
V L "s" 2 168 "*int8"
V L "endptr" 2 168 "*int8"
V L "base" 2 168 "sint8"
F G "strtoul" 2 168 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 2 162 1 "FUNCTION"
C L "strtoul" 2 174 1 "*"
C L "strtoul" 2 174 1 "*"
C L "strtoul" 2 174 1 "*"
C L "strtoul" 2 174 1 "*"
C L "strtoul" 2 174 1 "*"
F G "rand" 2 183 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
V L "seed" 2 205 "int32"
F G "srand" 2 205 "void(int32 seed)" "Memory management functions"
C L "srand" 2 185 3 "FUNCTION"
V L "string" 2 219 "*int8"
F G "system" 2 219 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 2 185 1 "FUNCTION"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 4 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
D G "labs" 2 263 "abs"
V L "numer" 2 265 "sint8"
V L "denom" 2 265 "sint8"
F G "div" 2 265 "div_t(sint8 numer,sint8 denom)"
V L "numer" 2 266 "sint16"
V L "denom" 2 266 "sint16"
F G "ldiv" 2 266 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 2 243 4 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
D G "_STRING" 4 12 ""
C L "ldiv" 3 2 7 "FUNCTION"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 4 19 10 "FUNCTION"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int8"
F G "memmove" 4 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
D G "strcopy" 4 54 "strcpy"
C L "strncpy" 4 19 4 "FUNCTION"
V L "s1" 4 61 "*int8"
V L "s2" 4 61 "*int8"
V L "n" 4 61 "int8"
F G "strncpy" 4 62 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 63 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
V L "s1" 4 78 "*int8"
V L "s2" 4 78 "*int8"
F G "strcat" 4 79 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 80 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
V L "s1" 4 96 "*int8"
V L "s2" 4 96 "*int8"
V L "n" 4 96 "int8"
F G "strncat" 4 97 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 98 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
V L "s1" 4 120 "*int8"
V L "s2" 4 120 "*int8"
V L "n" 4 120 "int8"
F G "memcmp" 4 121 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 4 122 "*int8"
V L "su2" 4 122 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
V L "s1" 4 134 "*int8"
V L "s2" 4 134 "*int8"
F G "strcmp" 4 135 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 4 19 2 "FUNCTION"
V L "s1" 4 144 "*int8"
V L "s2" 4 144 "*int8"
F G "strcoll" 4 145 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 4 19 4 "FUNCTION"
V L "s1" 4 157 "*int8"
V L "s2" 4 157 "*int8"
V L "n" 4 157 "int8"
F G "strncmp" 4 158 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 4 19 3 "FUNCTION"
V L "s1" 4 169 "*int8"
V L "s2" 4 169 "*int8"
V L "n" 4 169 "int8"
F G "strxfrm" 4 170 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 171 "*int8"
V L "n1" 4 172 "int8"
C L "memchr" 4 19 3 "FUNCTION"
V L "s" 4 191 "*int8"
V L "c" 4 191 "int8"
V L "n" 4 191 "int8"
F G "memchr" 4 192 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 4 193 "int8"
V L "su" 4 194 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
V L "s" 4 205 "*int8"
V L "c" 4 205 "int8"
F G "strchr" 4 206 "*int8(*int8 s,int8 c)"
C L "strcspn" 4 19 4 "FUNCTION"
V L "s1" 4 217 "*int8"
V L "s2" 4 217 "*int8"
F G "strcspn" 4 218 "int8(*int8 s1,*int8 s2)"
V L "sc1" 4 219 "*int8"
V L "sc2" 4 219 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
V L "s1" 4 232 "*int8"
V L "s2" 4 232 "*int8"
F G "strpbrk" 4 233 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 234 "*int8"
V L "sc2" 4 234 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
V L "s" 4 247 "*int8"
V L "c" 4 247 "int8"
F G "strrchr" 4 248 "*int8(*int8 s,int8 c)"
V L "p" 4 249 "*int8"
C L "strspn" 4 19 2 "FUNCTION"
V L "s1" 4 262 "*int8"
V L "s2" 4 262 "*int8"
F G "strspn" 4 263 "int8(*int8 s1,*int8 s2)"
V L "sc1" 4 264 "*int8"
V L "sc2" 4 264 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
V L "s1" 4 281 "*int8"
V L "s2" 4 281 "*int8"
F G "strstr" 4 282 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 283 "*int8"
V L "t" 4 283 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
V L "s1" 4 320 "*int8"
V L "s2" 4 320 "*int8"
F G "strtok" 4 321 "*int8(*int8 s1,*int8 s2)"
V L "beg" 4 322 "*int8"
V L "end" 4 322 "*int8"
V L "save" 4 323 "*int8"
C L "strlen" 4 19 6 "FUNCTION"
V L "s" 4 369 "*int8"
F G "strlen" 4 370 "int8(*int8 s)"
V L "sc" 4 371 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
V L "s1" 4 380 "*int8"
V L "s2" 4 380 "*int8"
F G "stricmp" 4 381 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 4 19 3 "FUNCTION"
V L "s" 4 394 "*int8"
F G "strlwr" 4 395 "*int8(*int8 s)"
V L "p" 4 396 "*int8"
V L "numer" 2 288 "sint8"
V L "denom" 2 288 "sint8"
F G "div" 2 289 "div_t(sint8 numer,sint8 denom)"
V L "val" 2 290 "div_t"
V L "numer" 2 296 "sint16"
V L "denom" 2 296 "sint16"
F G "ldiv" 2 297 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 2 298 "ldiv_t"
V L "s" 2 305 "*int8"
F G "atof" 2 306 "float(*int8 s)"
V L "pow10" 2 307 "float"
V L "result" 2 308 "float"
V L "sign" 2 309 "int8"
V L "c" 2 310 "int8"
V L "ptr" 2 311 "int8"
V L "s" 2 536 "*int8"
F G "atoe" 2 537 "float(*int8 s)"
V L "pow10" 2 538 "float"
V L "result" 2 539 "float"
V L "sign" 2 540 "int8"
V L "expsign" 2 541 "int8"
V L "c" 2 542 "int8"
V L "ptr" 2 543 "int8"
V L "i" 2 544 "int8"
V L "exp" 2 545 "float"
V L "expcnt" 2 546 "int8"
C L "atoe" 2 572 1 "FUNCTION"
V L "s" 2 604 "*int8"
F G "atoi" 2 605 "sint8(*int8 s)"
V L "result" 2 606 "sint8"
V L "sign" 2 607 "int8"
V L "base" 2 607 "int8"
V L "index" 2 607 "int8"
V L "c" 2 608 "int8"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
V L "s" 2 673 "*int8"
F G "atol" 2 674 "sint16(*int8 s)"
V L "result" 2 675 "sint16"
V L "sign" 2 676 "int8"
V L "base" 2 676 "int8"
V L "index" 2 676 "int8"
V L "c" 2 677 "int8"
C L "atol" 2 572 1 "FUNCTION"
C L "atol" 2 572 1 "FUNCTION"
C L "atol" 2 572 1 "FUNCTION"
C L "atol" 2 572 1 "FUNCTION"
C L "mult_with10" 2 572 1 "FUNCTION"
V L "num" 2 740 "int32"
F G "mult_with10" 2 741 "sint32(int32 num)"
V L "s" 2 746 "*int8"
F G "atoi32" 2 747 "sint32(*int8 s)"
V L "result" 2 748 "sint32"
V L "sign" 2 749 "int8"
V L "base" 2 749 "int8"
V L "index" 2 749 "int8"
V L "c" 2 750 "int8"
C L "atoi32" 2 572 1 "FUNCTION"
C L "atoi32" 2 572 1 "FUNCTION"
C L "atoi32" 2 572 1 "FUNCTION"
C L "atoi32" 2 572 1 "FUNCTION"
C L "atoi32" 2 572 1 "FUNCTION"
V L "num" 2 945 "sint32"
V L "base" 2 945 "int8"
V L "s" 2 945 "*int8"
F G "itoa" 2 946 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 2 947 "int32"
V L "i" 2 948 "int8"
V L "sign" 2 948 "int8"
V L "cnt" 2 948 "int8"
V L "c" 2 949 "int8"
C L "itoa" 2 572 1 "FUNCTION"
C L "itoa" 2 572 1 "FUNCTION"
C L "itoa" 2 572 1 "FUNCTION"
C L "itoa" 2 572 1 "FUNCTION"
C L "itoa" 2 572 1 "FUNCTION"
V L "s" 2 983 "*int8"
V L "endptr" 2 983 "*int8"
F G "strtod" 2 983 "float(*int8 s,*int8 endptr)"
V L "pow10" 2 984 "float"
V L "result" 2 985 "float"
V L "sign" 2 986 "int8"
V L "point" 2 986 "int8"
V L "c" 2 987 "int8"
V L "ptr" 2 988 "int8"
V L "s" 2 1245 "*int8"
V L "endptr" 2 1245 "*int8"
V L "base" 2 1245 "sint8"
F G "strtoul" 2 1246 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 2 1247 "*int8"
V L "s1" 2 1247 "*int8"
V L "sd" 2 1247 "*int8"
V L "x" 2 1248 "int16"
V L "sign" 2 1249 "int8"
V L "digits" 2 1250 "int8[1]"
C L "strtoul" 2 572 1 "FUNCTION"
C L "strtoul" 2 572 1 "FUNCTION"
C L "strtoul" 2 572 1 "FUNCTION"
V L "s" 2 1307 "*int8"
V L "endptr" 2 1307 "*int8"
V L "base" 2 1307 "sint8"
F G "strtol" 2 1308 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 2 1309 "*int8"
V L "s1" 2 1309 "*int8"
V L "sd" 2 1309 "*int8"
V L "x" 2 1310 "sint16"
V L "sign" 2 1311 "int8"
V L "digits" 2 1312 "int8[1]"
C L "strtol" 2 572 1 "FUNCTION"
C L "strtol" 2 572 1 "FUNCTION"
C L "strtol" 2 572 1 "FUNCTION"
V L "string" 2 1370 "*int8"
F G "system" 2 1371 "sint8(*int8 string)"
V L "s" 2 1375 "*int8"
V L "n" 2 1375 "int8"
F G "mblen" 2 1376 "int8(*int8 s,int8 n)"
V L "pwc" 2 1380 "*int8"
V L "s" 2 1380 "*int8"
V L "n" 2 1380 "int8"
F G "mbtowc" 2 1381 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 2 1386 "*int8"
V L "wchar" 2 1386 "int8"
F G "wctomb" 2 1387 "int8(*int8 s,int8 wchar)"
V L "pwcs" 2 1392 "*int8"
V L "s" 2 1392 "*int8"
V L "n" 2 1392 "int8"
F G "mbstowcs" 2 1393 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 2 1398 "*int8"
V L "pwcs" 2 1398 "*int8"
V L "n" 2 1398 "int8"
F G "wcstombs" 2 1399 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 2 1408 "int32"
F G "rand" 2 1411 "int16()"
V L "seed" 2 1416 "int32"
F G "srand" 2 1417 "void(int32 seed)"
V L "p1" 2 1426 "*int8"
V L "p2" 2 1426 "*int8"
T G "*_Cmpfun" 2 1426 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 2 1433 "*int8"
V L "qitems" 2 1433 "int8"
V L "qsize" 2 1433 "int8"
V L "cmp" 2 1433 "_Cmpfun"
F G "qsort" 2 1433 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 2 1434 "int8"
V L "j" 2 1434 "int8"
V L "i" 2 1434 "int8"
V L "l" 2 1434 "int8"
V L "done" 2 1435 "int1"
V L "t" 2 1436 "int8[16]"
V L "key" 2 1461 "*int8"
V L "base" 2 1461 "*int8"
V L "num" 2 1461 "int8"
V L "width" 2 1461 "int8"
V L "cmp" 2 1461 "_Cmpfun"
F G "bsearch" 2 1462 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 2 1463 "*int8"
V L "q" 2 1463 "*int8"
V L "n" 2 1464 "int8"
V L "pivot" 2 1465 "int8"
V L "val" 2 1466 "sint8"
C L "bsearch" 2 572 1 "FUNCTION"
D G "_FLOAT" 6 15 ""
D G "FLT_RADIX" 6 18 "2"
D G "FLT_MANT_DIG" 6 19 "24" "# of bits in mantissa"
D G "FLT_DIG" 6 21 "6" "# of decimal digits of precision"
D G "FLT_MIN_EXP" 6 23 " (-125)" "min binary exponent"
D G "FLT_MIN_10_EXP" 6 24 " (-37)" "min decimal exponent"
D G "FLT_MAX_EXP" 6 25 "128" "max binary exponent"
D G "FLT_MAX_10_EXP" 6 26 "38" "max decimal exponent"
D G "FLT_MAX" 6 27 "3.402823466e+38F" "max value"
D G "FLT_EPSILON" 6 28 "1.192092896e-07F" "smallest such that 1.0+FLT_EPSILON != 1.0"
D G "FLT_MIN" 6 29 "1.175494351e-38F" "min positive value"
D G "DBL_MANT_DIG" 6 33 "53" "# of bits in mantissa"
D G "DBL_DIG" 6 35 "15" "# of decimal digits of precision"
D G "DBL_MIN_EXP" 6 37 " (-1021)" "min binary exponent"
D G "DBL_MIN_10_EXP" 6 38 " (-307)" "min decimal exponent"
D G "DBL_MAX_EXP" 6 39 "1024" "max binary exponent"
D G "DBL_MAX_10_EXP" 6 40 "308" "max decimal exponent"
D G "DBL_MAX" 6 41 "1.79769313486231e+308F" "max value"
D G "DBL_EPSILON" 6 42 "2.2204460492503131e-16F" "smallest such that 1.0+FLT_EPSILON != 1.0"
D G "DBL_MIN" 6 43 "2.22507385850721e-308F" "min positive value"
D G "LDBL_MANT_DIG" 6 47 "64" "# of bits in mantissa"
D G "LDBL_DIG" 6 49 "18" "# of decimal digits of precision"
D G "LDBL_MIN_EXP" 6 51 " (-16381)" "min binary exponent"
D G "LDBL_MIN_10_EXP" 6 52 " (-4931)" "min decimal exponent"
D G "LDBL_MAX_EXP" 6 53 "16384" "max binary exponent"
D G "LDBL_MAX_10_EXP" 6 54 "4932" "max decimal exponent"
D G "LDBL_MAX" 6 55 "1.18973149535723176502e+4932F" "max value"
D G "LDBL_EPSILON" 6 56 "1.084202172485504434e-019F" "smallest such that 1.0+FLT_EPSILON != 1.0"
D G "LDBL_MIN" 6 57 "3.36210314311209350626e-4932F" "min positive value"
D G "usb_cdc_kbhit" 7 117 "() (usb_cdc_get_buffer_status.got)"
D G "usb_cdc_putready" 7 118 "() (usb_cdc_put_buffer_nextin<USB_CDC_DATA_IN_SIZE)"
D G "usb_cdc_connected" 7 119 "() (usb_cdc_got_set_line_coding)"
V L "c" 7 120 "int8"
F G "usb_cdc_putc_fast" 7 120 "void(int8 c)"
F G "usb_cdc_getc" 7 121 "int8()"
V L "c" 7 122 "int8"
F G "usb_cdc_putc" 7 122 "void(int8 c)" "input.c ported to use CDC:"
F G "get_float_usb" 7 125 "float()"
F G "get_long_usb" 7 126 "sint16()"
F G "get_int_usb" 7 127 "sint8()"
V L "s" 7 128 "*int8"
V L "max" 7 128 "int8"
F G "get_string_usb" 7 128 "void(*int8 s,int8 max)"
F G "gethex_usb" 7 129 "int8()"
F G "gethex1_usb" 7 130 "int8()" "functions automatically called by USB handler code"
F G "usb_isr_tkn_cdc" 7 133 "void()"
F G "usb_cdc_init" 7 134 "void()"
F G "usb_isr_tok_out_cdc_control_dne" 7 135 "void()"
F G "usb_isr_tok_in_cdc_data_dne" 7 136 "void()"
F G "usb_isr_tok_out_cdc_data_dne" 7 137 "void()"
F G "usb_cdc_flush_out_buffer" 7 139 "void()" "Tells the CCS PIC USB firmware to include HID handling code."
D G "USB_HID_DEVICE" 7 142 "FALSE"
D G "USB_CDC_DEVICE" 7 143 "TRUE"
D G "USB_CDC_COMM_IN_ENDPOINT" 7 145 "1"
D G "USB_CDC_COMM_IN_SIZE" 7 146 "8"
D G "USB_EP1_TX_ENABLE" 7 147 "USB_ENABLE_INTERRUPT"
D G "USB_EP1_TX_SIZE" 7 148 "USB_CDC_COMM_IN_SIZE"
D G "USB_CDC_DATA_IN_ENDPOINT" 7 151 "2"
D G "USB_CDC_DATA_IN_SIZE" 7 152 "64"
D G "USB_EP2_TX_ENABLE" 7 153 "USB_ENABLE_BULK"
D G "USB_EP2_TX_SIZE" 7 154 "USB_CDC_DATA_IN_SIZE"
D G "USB_CDC_DATA_OUT_ENDPOINT" 7 157 "2"
D G "USB_CDC_DATA_OUT_SIZE" 7 158 "64"
D G "USB_EP2_RX_ENABLE" 7 159 "USB_ENABLE_BULK"
D G "USB_EP2_RX_SIZE" 7 160 "USB_CDC_DATA_OUT_SIZE"
D G "__USB_PIC_PERIF__" 7 169 "1"
D G "__USB_HARDWARE__" 8 156 ""
D G "__PIC__" 8 159 "1"
D G "__USB_4550__" 8 183 ""
D G "USB_TOTAL_BUFFER_SPACE" 8 184 " ((int16)0x300)"
D G "USB_MAX_NUM_ENDPOINTS" 8 185 "16"
D G "USB_USE_FULL_SPEED" 8 191 "TRUE"
D G "USB_CON_SENSE_PIN" 8 195 "0"
D G "USB_MAX_EP0_PACKET_LENGTH" 8 207 "64"
D G "__USB_PROTOTYPES__" 9 169 ""
D G "USB_HID_BOOT_PROTOCOL" 9 172 "FALSE"
D G "USB_HID_IDLE" 9 176 "FALSE"
D G "USB_OPT_FOR_ROM" 9 189 "TRUE" "set to false to opt for less RAM, true to opt for less ROM"
D G "USB_NUM_CONFIGURATIONS" 9 197 "1" "DO NOT CHANGE"
D G "PID_IN" 9 200 "0x09" "device to host transactions"
D G "PID_OUT" 9 201 "0x01" "host to device transactions"
D G "PID_SETUP" 9 202 "0x0D" "host to device setup transaction"
D G "PID_ACK" 9 203 "0x02" "receiver accepts error-free data packet"
D G "PID_DATA0" 9 204 "0x03" "data packet with even sync bit"
D G "PID_SOF" 9 205 "0x05" "start of framer marker and frame number"
D G "PID_NAK" 9 206 "0x0A" "receiver can't accept data or sender cant send data or has no data to transmit"
D G "PID_DATA1" 9 207 "0x0B" "data packet with odd sync bit"
D G "PID_PRE" 9 208 "0x0C" "preamble issued by host.  enables downstream traffic to low-speed device"
D G "PID_STALL" 9 209 "0x0E" "a control request isnt supported or the endpoint is halted"
D G "USB_DESC_DEVICE_TYPE" 9 212 "0x01" "#DEFINE USB_DEVICE_DESC_KEY      0x01"
D G "USB_DESC_CONFIG_TYPE" 9 213 "0x02" "#DEFINE USB_CONFIG_DESC_KEY      0x02"
D G "USB_DESC_STRING_TYPE" 9 214 "0x03" "#DEFINE USB_STRING_DESC_KEY      0x03"
D G "USB_DESC_INTERFACE_TYPE" 9 215 "0x04" "#DEFINE USB_INTERFACE_DESC_KEY   0x04"
D G "USB_DESC_ENDPOINT_TYPE" 9 216 "0x05" "#DEFINE USB_ENDPOINT_DESC_KEY    0x05"
D G "USB_DESC_CLASS_TYPE" 9 217 "0x21" "#DEFINE USB_CLASS_DESC_KEY       0x21"
D G "USB_DESC_HIDREPORT_TYPE" 9 218 "0x22"
D G "USB_DESC_DEVICE_LEN" 9 221 "18" "#DEFINE USB_DEVICE_DESC_LEN      18"
D G "USB_DESC_CONFIG_LEN" 9 222 "9" "#DEFINE USB_CONFIG_DESC_LEN      9"
D G "USB_DESC_INTERFACE_LEN" 9 223 "9" "#DEFINE USB_INTERFACE_DESC_LEN   9"
D G "USB_DESC_CLASS_LEN" 9 224 "9" "#DEFINE USB_CLASS_DESC_LEN       9"
D G "USB_DESC_ENDPOINT_LEN" 9 225 "7" "#DEFINE USB_ENDPOINT_DESC_LEN    7"
D G "USB_STANDARD_REQUEST_GET_STATUS" 9 228 "0x00"
D G "USB_STANDARD_REQUEST_CLEAR_FEATURE" 9 229 "0x01"
D G "USB_STANDARD_REQUEST_SET_FEATURE" 9 230 "0x03"
D G "USB_STANDARD_REQUEST_SET_ADDRESS" 9 231 "0x05"
D G "USB_STANDARD_REQUEST_GET_DESCRIPTOR" 9 232 "0x06"
D G "USB_STANDARD_REQUEST_SET_DESCRIPTOR" 9 233 "0x07"
D G "USB_STANDARD_REQUEST_GET_CONFIGURATION" 9 234 "0x08"
D G "USB_STANDARD_REQUEST_SET_CONFIGURATION" 9 235 "0x09"
D G "USB_STANDARD_REQUEST_GET_INTERFACE" 9 236 "0x0A"
D G "USB_STANDARD_REQUEST_SET_INTERFACE" 9 237 "0x0B"
D G "USB_STANDARD_REQUEST_SYNCH_FRAME" 9 238 "0x0C"
D G "USB_HID_REQUEST_GET_REPORT" 9 241 "0x01"
D G "USB_HID_REQUEST_GET_IDLE" 9 242 "0x02"
D G "USB_HID_REQUEST_GET_PROTOCOL" 9 243 "0x03"
D G "USB_HID_REQUEST_SET_REPORT" 9 244 "0x09"
D G "USB_HID_REQUEST_SET_IDLE" 9 245 "0x0A"
D G "USB_HID_REQUEST_SET_PROTOCOL" 9 246 "0x0B"
D G "USB_ENDPOINT_TYPE_CONTROL" 9 249 "0x00"
D G "USB_ENDPOINT_TYPE_ISOCHRONOUS" 9 250 "0x01"
D G "USB_ENDPOINT_TYPE_BULK" 9 251 "0x02"
D G "USB_ENDPOINT_TYPE_INTERRUPT" 9 252 "0x03"
D G "USB_ENABLE_DISABLED" 9 255 "0"
D G "USB_ENABLE_BULK" 9 256 "0x01"
D G "USB_ENABLE_ISOCHRONOUS" 9 257 "0x02"
D G "USB_ENABLE_INTERRUPT" 9 258 "0x03"
D G "USB_ENABLE_CONTROL" 9 259 "0x04"
C L "usb_cdc_flush_out_buffer" 9 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 9 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 9 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 9 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 9 2 1 "FUNCTION"
V G "USB_stack_status" 9 276 "{USB_STATES dev_req,int8 curr_config,int8 status_device,USB_GETDESC_TYPES getdesc_type}"
V G "__usb_kbhit_status" 9 286 "int16" "/ *** User function prototypes"
F G "usb_wait_for_enumeration" 9 289 "void()"
F G "usb_unermated" 9 290 "int8()"
V L "endpoint" 9 291 "int8"
V L "ptr" 9 291 "*int8"
V L "max" 9 291 "int16"
V L "timeout" 9 291 "int16"
F G "usb_gets" 9 291 "int8(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "endpoint" 9 292 "int8"
V L "ptr" 9 292 "*int8"
V L "len" 9 292 "int16"
V L "timeout" 9 292 "int8"
F G "usb_puts" 9 292 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)" "/ *** Token and request hanlder function prototypes"
F G "usb_token_reset" 9 295 "void()"
F G "usb_put_0len_0" 9 297 "void()"
V L "len" 9 298 "int8"
F G "usb_request_send_response" 9 298 "void(int8 len)" "always sends usb_ep0_rx_buffer[] to endpoint 0 with a toggle of DATA"
V L "endpoint" 9 300 "int8"
V L "status" 9 300 "*int16"
V L "buffer" 9 300 "*int16"
V L "size" 9 300 "*int8"
F G "usb_match_registers" 9 300 "void(int8 endpoint,*int16 status,*int16 buffer,*int8 size)"
V L "endpoint" 9 302 "int8"
F G "usb_isr_tok_in_dne" 9 302 "void(int8 endpoint)"
V L "endpoint" 9 303 "int8"
F G "usb_isr_tok_out_dne" 9 303 "void(int8 endpoint)"
F G "usb_isr_tok_setup_dne" 9 304 "void()"
F G "usb_isr_tkn_setup_StandardEndpoint" 9 306 "void()"
F G "usb_isr_tkn_setup_StandardDevice" 9 307 "void()"
F G "usb_isr_tkn_setup_StandardInterface" 9 308 "void()"
F G "usb_Get_Descriptor" 9 314 "void()"
F G "usb_copy_desc_seg_to_ep" 9 315 "void()"
F G "usb_finish_set_address" 9 317 "void()" "*** ENABLE RX ENDPOINTS AND BUFFERS"
D G "USB_EP0_TX_ENABLE" 9 322 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_ENABLE" 9 323 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_SIZE" 9 324 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP0_TX_SIZE" 9 325 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP1_RX_ENABLE" 9 332 "USB_ENABLE_DISABLED"
D G "USB_EP1_RX_SIZE" 9 339 "0"
D G "USB_EP3_TX_ENABLE" 9 391 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_ENABLE" 9 394 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_SIZE" 9 401 "0"
D G "USB_EP3_TX_SIZE" 9 412 "0"
D G "USB_EP4_TX_ENABLE" 9 422 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_ENABLE" 9 425 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_SIZE" 9 432 "0"
D G "USB_EP4_TX_SIZE" 9 443 "0"
D G "USB_EP5_TX_ENABLE" 9 453 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_ENABLE" 9 456 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_SIZE" 9 463 "0"
D G "USB_EP5_TX_SIZE" 9 474 "0"
D G "USB_EP6_TX_ENABLE" 9 484 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_ENABLE" 9 487 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_SIZE" 9 494 "0"
D G "USB_EP6_TX_SIZE" 9 505 "0"
D G "USB_EP7_TX_ENABLE" 9 515 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_ENABLE" 9 518 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_SIZE" 9 525 "0"
D G "USB_EP7_TX_SIZE" 9 536 "0"
D G "USB_EP8_TX_ENABLE" 9 546 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_ENABLE" 9 549 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_SIZE" 9 556 "0"
D G "USB_EP8_TX_SIZE" 9 567 "0"
D G "USB_EP9_TX_ENABLE" 9 577 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_ENABLE" 9 580 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_SIZE" 9 587 "0"
D G "USB_EP9_TX_SIZE" 9 598 "0"
D G "USB_EP10_TX_ENABLE" 9 608 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_ENABLE" 9 611 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_SIZE" 9 618 "0"
D G "USB_EP10_TX_SIZE" 9 629 "0"
D G "USB_EP11_TX_ENABLE" 9 639 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_ENABLE" 9 642 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_SIZE" 9 649 "0"
D G "USB_EP11_TX_SIZE" 9 660 "0"
D G "USB_EP12_TX_ENABLE" 9 670 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_ENABLE" 9 673 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_SIZE" 9 680 "0"
D G "USB_EP12_TX_SIZE" 9 691 "0"
D G "USB_EP13_TX_ENABLE" 9 701 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_ENABLE" 9 704 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_SIZE" 9 711 "0"
D G "USB_EP13_TX_SIZE" 9 722 "0"
D G "USB_EP14_TX_ENABLE" 9 732 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_ENABLE" 9 735 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_SIZE" 9 742 "0"
D G "USB_EP14_TX_SIZE" 9 753 "0"
D G "USB_EP15_TX_ENABLE" 9 763 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_ENABLE" 9 766 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_SIZE" 9 773 "0"
D G "USB_EP15_TX_SIZE" 9 784 "0"
V G "usb_ep_tx_type" 9 791 "int8[16]"
V G "usb_ep_rx_type" 9 800 "int8[16]"
V G "usb_ep_tx_size" 9 809 "int16[16]"
V G "usb_ep_rx_size" 9 818 "int16[16]"
D G "USB_BUFFER_NEEDED" 8 213 " (USB_EP0_TX_SIZE+USB_EP0_RX_SIZE+USB_EP1_TX_SIZE+USB_EP1_RX_SIZE+USB_EP2_TX_SIZE+USB_EP2_RX_SIZE+USB_EP3_TX_SIZE+USB_EP3_RX_SIZE+USB_EP4_TX_SIZE+USB_EP4_RX_SIZE+USB_EP5_TX_SIZE+USB_EP5_RX_SIZE+USB_EP6_TX_SIZE+USB_EP6_RX_SIZE+USB_EP7_TX_SIZE+USB_EP7_RX_SIZE+USB_EP8_TX_SIZE+USB_EP8_RX_SIZE+USB_EP9_TX_SIZE+USB_EP9_RX_SIZE+USB_EP10_TX_SIZE+USB_EP10_RX_SIZE+USB_EP11_TX_SIZE+USB_EP11_RX_SIZE+USB_EP12_TX_SIZE+USB_EP12_RX_SIZE+USB_EP13_TX_SIZE+USB_EP13_RX_SIZE+USB_EP14_TX_SIZE+USB_EP14_RX_SIZE+USB_EP15_TX_SIZE+USB_EP15_RX_SIZE)"
D G "debug_usb" 8 225 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
D G "debug_display_ram" 8 228 "(x,y)"
D G "USB_IGNORE_RX_DTS" 8 247 "FALSE"
D G "USB_IGNORE_TX_DTS" 8 251 "FALSE"
D G "USB_USE_ERROR_COUNTER" 8 257 "FALSE"
D G "USB_PING_PONG_MODE_OFF" 8 260 "0" "no ping pong"
D G "USB_PING_PONG_MODE_E0" 8 261 "1" "ping pong endpoint 0 only"
D G "USB_PING_PONG_MODE_ON" 8 262 "2" "ping pong all endpoints"
D G "USB_PING_PONG_MODE" 8 266 "USB_PING_PONG_MODE_OFF"
C L "usb_finish_set_address" 8 226 1 "FUNCTION"
D G "UEP0_LOC" 8 285 "0xF70"
D G "USB_BUFFER" 8 310 "0x500"
D G "BD0STAT_LOC" 8 318 "0x400"
D G "BD0CNT_LOC" 8 319 "0x401"
D G "BD0ADRL_LOC" 8 320 "0x402"
D G "BD0ADRH_LOC" 8 321 "0x403"
D G "UEP" 8 323 "(x) *(UEP0_LOC+x)"
D G "EP_BDxST_O" 8 349 "(x)    *(BD0STAT_LOC + x*8)"
D G "EP_BDxCNT_O" 8 350 "(x)    *(BD0CNT_LOC + x*8)"
D G "EP_BDxADR_O" 8 351 "(x)   *(int16 *)(BD0ADRL_LOC + x*8)"
D G "EP_BDxST_I" 8 352 "(x)    *(BD0STAT_LOC + 4 + x*8)"
D G "EP_BDxCNT_I" 8 353 "(x)    *(BD0CNT_LOC + 4 + x*8)"
D G "EP_BDxADR_I" 8 354 "(x)   *(int16 *)(BD0ADRL_LOC + 4 + x*8)"
D G "ENDPT_DISABLED" 8 360 "0x00" "endpoint not used"
D G "ENDPT_IN_ONLY" 8 361 "0x02" "endpoint supports IN transactions only"
D G "ENDPT_OUT_ONLY" 8 362 "0x04" "endpoint supports OUT transactions only"
D G "ENDPT_CONTROL" 8 363 "0x06" "Supports IN, OUT and CONTROL transactions - Only use with EP0"
D G "ENDPT_NON_CONTROL" 8 364 "0x0E" "Supports both IN and OUT transactions"
C L "usb_finish_set_address" 8 226 1 "FUNCTION"
V G "usb_state" 8 368 ""
D G "USB_PIC_PID_IN" 8 371 "0x24" "device to host transactions"
D G "USB_PIC_PID_OUT" 8 372 "0x04" "host to device transactions"
D G "USB_PIC_PID_SETUP" 8 373 "0x34" "host to device setup transaction"
D G "USTAT_IN_E0" 8 375 "4"
D G "USTAT_OUT_SETUP_E0" 8 376 "0"
D G "__USB_UIF_RESET" 8 378 "0x01"
D G "__USB_UIF_ERROR" 8 379 "0x02"
D G "__USB_UIF_ACTIVE" 8 380 "0x04"
D G "__USB_UIF_TOKEN" 8 381 "0x08"
D G "__USB_UIF_IDLE" 8 382 "0x10"
D G "__USB_UIF_STALL" 8 383 "0x20"
D G "__USB_UIF_SOF" 8 384 "0x40"
D G "STANDARD_INTS" 8 389 "0x3D"
D G "__USB_UCFG_UTEYE" 8 392 "0x80"
D G "__USB_UCFG_UOEMON" 8 394 "0x40"
D G "__USB_UCFG_UPUEN" 8 396 "0x10"
D G "__USB_UCFG_UTRDIS" 8 397 "0x08"
D G "__USB_UCFG_FSEN" 8 398 "0x04"
D G "__UCFG_VAL_ENABLED__" 8 401 " (__USB_UCFG_UPUEN | __USB_UCFG_FSEN | USB_PING_PONG_MODE)"
D G "__UCFG_VAL_DISABLED__" 8 406 "0x08"
V G "usb_ep0_rx_buffer" 8 408 "int8[64]"
V G "usb_ep0_tx_buffer" 8 411 "int8[64]"
V G "usb_data_buffer" 8 414 "int8[640]"
V G "__setup_0_tx_size" 8 417 "int8" "interrupt handler, specific to PIC18Fxx5x peripheral only"
F G "usb_handle_interrupt" 8 420 "void()"
F G "usb_isr_rst" 8 421 "void()"
F G "usb_isr_uerr" 8 422 "void()"
F G "usb_isr_sof" 8 423 "void()"
F G "usb_isr_activity" 8 424 "void()"
F G "usb_isr_uidle" 8 425 "void()"
F G "usb_isr_tok_dne" 8 426 "void()"
F G "usb_isr_stall" 8 427 "void()"
F G "usb_init_ep0_setup" 8 428 "void()" "following functions standard part of CCS PIC USB driver, and used by usb.c"
F G "usb_init" 8 431 "void()"
F G "usb_detach" 8 432 "void()"
V L "endpoint" 8 433 "int8"
V L "ptr" 8 433 "*int8"
V L "len" 8 433 "int16"
V L "tgl" 8 433 "USB_DTS_BIT"
F G "usb_put_packet" 8 433 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)"
V L "endpoint" 8 434 "int8"
V L "len" 8 434 "int16"
V L "tgl" 8 434 "USB_DTS_BIT"
F G "usb_flush_in" 8 434 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)" "marks the transmit buffer as ready for transmission"
V L "endpoint" 8 435 "int8"
V L "ptr" 8 435 "*int8"
V L "max" 8 435 "int16"
F G "usb_get_packet" 8 435 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 8 436 "int8"
F G "usb_rx_packet_size" 8 436 "int16(int8 endpoint)"
V L "endpoint" 8 437 "int8"
V L "ptr" 8 437 "*int8"
V L "max" 8 437 "int16"
F G "usb_get_packet_buffer" 8 437 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 8 438 "int8"
V L "tgl" 8 438 "USB_DTS_BIT"
F G "usb_flush_out" 8 438 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "endpoint" 8 439 "int8"
F G "usb_stall_ep" 8 439 "void(int8 endpoint)"
V L "endpoint" 8 440 "int8"
F G "usb_unstall_ep" 8 440 "void(int8 endpoint)"
V L "endpoint" 8 441 "int8"
F G "usb_endpoint_stalled" 8 441 "int8(int8 endpoint)"
V L "address" 8 442 "int8"
F G "usb_set_address" 8 442 "void(int8 address)"
V L "config" 8 443 "int8"
F G "usb_set_configured" 8 443 "void(int8 config)"
F G "usb_disable_endpoints" 8 444 "void()" "BEGIN User Functions:"
D G "usb_attached" 8 457 "() TRUE"
C L "usb_disable_endpoints" 8 226 5 "FUNCTION"
F G "usb_detach" 8 466 "void()" "done"
C L "usb_detach" 8 226 1 "FUNCTION"
C L "usb_detach" 8 226 1 "FUNCTION"
C L "usb_detach" 8 226 1 "FUNCTION"
C L "usb_attach" 8 226 7 "FUNCTION"
F G "usb_attach" 8 484 "void()"
C L "usb_attach" 8 226 1 "FUNCTION"
C L "usb_attach" 8 226 1 "FUNCTION"
C L "usb_attach" 8 226 1 "FUNCTION"
D G "usb_init_cs" 8 506 "usb_detach"
C L "usb_task" 8 226 13 "FUNCTION"
F G "usb_task" 8 522 "void()"
C L "usb_task" 8 226 1 "FUNCTION"
C L "usb_init" 8 226 15 "FUNCTION"
F G "usb_init" 8 563 "void()"
C L "usb_flush_in" 8 226 12 "FUNCTION"
V L "endpoint" 8 585 "int8"
V L "len" 8 585 "int16"
V L "tgl" 8 585 "USB_DTS_BIT"
F G "usb_flush_in" 8 585 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)"
V L "i" 8 586 "int8"
C L "usb_flush_in" 8 226 1 "FUNCTION"
C L "usb_flush_in" 8 226 1 "FUNCTION"
C L "usb_flush_in" 8 226 1 "FUNCTION"
C L "usb_flush_in" 8 226 1 "FUNCTION"
C L "usb_flush_in" 8 226 1 "FUNCTION"
C L "usb_flush_in" 8 226 1 "FUNCTION"
C L "usb_put_packet" 8 226 21 "FUNCTION"
V L "endpoint" 8 660 "int8"
V L "ptr" 8 660 "*int8"
V L "len" 8 660 "int16"
V L "tgl" 8 660 "USB_DTS_BIT"
F G "usb_put_packet" 8 660 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)" "done"
V L "j" 8 661 "int16"
V L "i" 8 662 "int8"
V L "buff_add" 8 663 "*int8"
C L "usb_flush_out" 8 226 13 "FUNCTION"
V L "endpoint" 8 701 "int8"
V L "tgl" 8 701 "USB_DTS_BIT"
F G "usb_flush_out" 8 701 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "i" 8 702 "int8"
V L "len" 8 703 "int16"
C L "usb_flush_out" 8 226 1 "FUNCTION"
C L "usb_flush_out" 8 226 1 "FUNCTION"
C L "usb_flush_out" 8 226 1 "FUNCTION"
C L "usb_flush_out" 8 226 1 "FUNCTION"
C L "usb_flush_out" 8 226 1 "FUNCTION"
V L "endpoint" 8 745 "int8"
F G "usb_rx_packet_size" 8 745 "int16(int8 endpoint)"
C L "usb_get_packet_buffer" 8 226 14 "FUNCTION"
V L "endpoint" 8 764 "int8"
V L "ptr" 8 764 "*int8"
V L "max" 8 764 "int16"
F G "usb_get_packet_buffer" 8 764 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "al" 8 765 "*int8"
V L "st" 8 766 "int8"
V L "i" 8 767 "int16"
C L "usb_get_packet_buffer" 8 226 1 "FUNCTION"
C L "usb_get_packet" 8 226 17 "FUNCTION"
V L "endpoint" 8 809 "int8"
V L "ptr" 8 809 "*int8"
V L "max" 8 809 "int16"
F G "usb_get_packet" 8 809 "int16(int8 endpoint,*int8 ptr,int16 max)"
C L "usb_tbe" 8 226 11 "FUNCTION"
V L "endpoint" 8 829 "int8"
F G "usb_tbe" 8 829 "int8(int8 endpoint,*int8 ptr,int16 max)"
V L "st" 8 830 "int8"
C L "usb_stall_ep" 8 226 12 "FUNCTION"
V L "endpoint" 8 850 "int8"
F G "usb_stall_ep" 8 850 "void(int8 endpoint)" "done"
V L "direction" 8 851 "int1"
C L "usb_unstall_ep" 8 226 9 "FUNCTION"
V L "endpoint" 8 872 "int8"
F G "usb_unstall_ep" 8 872 "void(int8 endpoint)" "done"
V L "direction" 8 873 "int1"
C L "usb_endpoint_stalled" 8 226 14 "FUNCTION"
V L "endpoint" 8 903 "int8"
F G "usb_endpoint_stalled" 8 903 "int8(int8 endpoint)" "done"
V L "direction" 8 904 "int1"
V L "st" 8 905 "int8"
C L "usb_set_address" 8 226 8 "FUNCTION"
V L "address" 8 927 "int8"
F G "usb_set_address" 8 927 "void(int8 address)" "done"
C L "usb_set_configured" 8 226 11 "FUNCTION"
V L "config" 8 950 "int8"
F G "usb_set_configured" 8 950 "void(int8 config)"
V L "en" 8 951 "int8"
V L "addy" 8 952 "int16"
V L "new_uep" 8 953 "int8"
V L "len" 8 954 "int16"
V L "i" 8 955 "int8"
C L "usb_set_configured" 8 226 1 "FUNCTION"
C L "usb_set_configured" 8 226 1 "FUNCTION"
C L "usb_isr" 8 226 13 "FUNCTION"
F G "usb_isr" 8 1014 "void()"
C L "usb_isr" 8 226 1 "FUNCTION"
C L "usb_isr" 8 226 1 "FUNCTION"
C L "usb_isr" 8 226 1 "FUNCTION"
C L "usb_isr" 8 226 1 "FUNCTION"
C L "usb_isr" 8 226 1 "FUNCTION"
C L "usb_isr" 8 226 1 "FUNCTION"
C L "usb_isr" 8 226 1 "FUNCTION"
C L "usb_isr" 8 226 1 "FUNCTION"
C L "usb_isr_sof" 8 226 1 "FUNCTION"
F G "usb_isr_sof" 8 1038 "void()"
C L "usb_disable_endpoints" 8 226 5 "FUNCTION"
F G "usb_disable_endpoints" 8 1049 "void()"
V L "i" 8 1050 "int8"
C L "usb_isr_rst" 8 226 6 "FUNCTION"
F G "usb_isr_rst" 8 1064 "void()"
C L "usb_isr_rst" 8 226 1 "FUNCTION"
C L "usb_isr_rst" 8 226 1 "FUNCTION"
C L "usb_isr_rst" 8 226 1 "FUNCTION"
C L "usb_init_ep0_setup" 8 226 5 "FUNCTION"
F G "usb_init_ep0_setup" 8 1097 "void()"
C L "usb_init_ep0_setup" 8 226 1 "FUNCTION"
C L "usb_isr_uerr" 8 226 7 "FUNCTION"
F G "usb_isr_uerr" 8 1118 "void()"
C L "usb_isr_uidle" 8 226 5 "FUNCTION"
F G "usb_isr_uidle" 8 1170 "void()"
C L "usb_isr_uidle" 8 226 1 "FUNCTION"
C L "usb_isr_uidle" 8 226 1 "FUNCTION"
C L "usb_isr_uidle" 8 226 1 "FUNCTION"
C L "usb_isr_activity" 8 226 6 "FUNCTION"
F G "usb_isr_activity" 8 1186 "void()"
C L "usb_isr_activity" 8 226 1 "FUNCTION"
C L "usb_isr_activity" 8 226 1 "FUNCTION"
C L "usb_isr_stall" 8 226 5 "FUNCTION"
F G "usb_isr_stall" 8 1200 "void()"
C L "usb_isr_tok_dne" 8 226 13 "FUNCTION"
F G "usb_isr_tok_dne" 8 1225 "void()"
V L "en" 8 1226 "int8"
C L "usb_isr_tok_dne" 8 226 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 226 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 226 3 "FUNCTION"
C L "usb_isr_tok_dne" 8 226 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 226 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 226 1 "FUNCTION"
C L "usb_request_send_response" 8 226 23 "FUNCTION"
V L "len" 8 1308 "int8"
F G "usb_request_send_response" 8 1308 "void(int8 len)"
F G "usb_request_get_data" 8 1312 "void(int8 len)"
F G "usb_request_stall" 8 1316 "void()"
D G "__USB_DESCRIPTORS__" 10 31 ""
D G "USB_TOTAL_CONFIG_LEN" 10 44 "67" "config+interface+class+endpoint+endpoint (2 endpoints)"
V G "USB_CONFIG_DESC" 10 46 "int8[1]" "IN ORDER TO COMPLY WITH WINDOWS HOSTS, THE ORDER OF THIS ARRAY MUST BE:"
D G "USB_MAX_NUM_INTERFACES" 10 144 "2"
V G "USB_NUM_INTERFACES" 10 147 "int8[1]"
V G "USB_CLASS_DESCRIPTORS" 10 154 "int16[1][2][4]" "config 1"
V G "USB_DEVICE_DESC" 10 176 "int8[18]" "starts of with device configuration. only one possible"
V G "USB_STRING_DESC_OFFSET" 10 206 "int8[1]"
V G "USB_STRING_DESC" 10 208 "int8[1]" "string 0"
D G "__USB_DRIVER__" 11 177 ""
V G "USB_address_pending" 11 189 "int8" "save previous state because packets can take several isrs"
V G "usb_getdesc_ptr" 11 190 "int8"
V G "usb_getdesc_len" 11 190 "int8"
V G "USB_Interface" 11 196 "int8[2]" "config state for all of our interfaces, NUM_INTERFACES defined with descriptors"
D G "usb_kbhit" 11 210 "(x) bit_test(__usb_kbhit_status,x)"
D G "usb_enumerated" 11 221 "() (USB_stack_status.curr_config)"
C L "usb_wait_for_enumeration" 11 190 6 "FUNCTION"
F G "usb_wait_for_enumeration" 11 230 "void()"
C L "usb_puts" 11 190 12 "FUNCTION"
V L "endpoint" 11 247 "int8"
V L "ptr" 11 247 "*int8"
V L "len" 11 247 "int16"
V L "timeout" 11 247 "int8"
F G "usb_puts" 11 247 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)"
V L "i" 11 248 "int16"
V L "res" 11 249 "int1"
V L "this_packet_len" 11 250 "int16"
V L "packet_size" 11 251 "int16"
V L "timeout_1us" 11 252 "int32"
C L "usb_puts" 11 190 1 "FUNCTION"
C L "usb_puts" 11 190 1 "FUNCTION"
C L "usb_puts" 11 190 1 "FUNCTION"
C L "usb_puts" 11 190 1 "FUNCTION"
C L "usb_gets" 11 190 17 "FUNCTION"
V L "endpoint" 11 305 "int8"
V L "ptr" 11 305 "*int8"
V L "max" 11 305 "int16"
V L "timeout" 11 305 "int16"
F G "usb_gets" 11 305 "int8(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "ret" 11 306 "int16"
V L "to" 11 307 "int16"
V L "len" 11 308 "int16"
V L "packet_size" 11 309 "int16"
V L "this_packet_max" 11 310 "int16"
C L "usb_token_reset" 11 190 9 "FUNCTION"
F G "usb_token_reset" 11 348 "void()"
V L "i" 11 349 "int8"
C L "usb_token_reset" 11 190 1 "FUNCTION"
C L "usb_token_reset" 11 190 1 "FUNCTION"
C L "usb_token_reset" 11 190 1 "FUNCTION"
C L "usb_token_reset" 11 190 1 "FUNCTION"
D G "usb_put_0len_0" 11 375 "() usb_request_send_response(0)"
C L "usb_endpoint_is_valid" 11 190 10 "FUNCTION"
V L "endpoint" 11 389 "int8"
F G "usb_endpoint_is_valid" 11 389 "int8(int8 endpoint)"
V L "direction" 11 390 "int1"
C L "usb_endpoint_is_valid" 11 190 1 "FUNCTION"
C L "usb_endpoint_is_valid" 11 190 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 11 190 16 "FUNCTION"
V L "endpoint" 11 419 "int8"
F G "usb_isr_tok_in_dne" 11 419 "void(int8 endpoint)"
C L "usb_isr_tok_in_dne" 11 190 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 11 190 1 "FUNCTION"
C L "usb_isr_tok_out_dne" 11 190 10 "FUNCTION"
V L "endpoint" 11 442 "int8"
F G "usb_isr_tok_out_dne" 11 442 "void(int8 endpoint)" "TODO:"
C L "usb_isr_tok_out_dne" 11 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 11 190 32 "FUNCTION"
F G "usb_isr_tok_setup_dne" 11 497 "void()"
C L "usb_isr_tok_setup_dne" 11 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 11 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 11 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 11 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardDevice" 11 549 "void()"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 11 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardInterface" 11 628 "void()"
V L "curr_config" 11 629 "int8"
C L "usb_isr_tkn_setup_StandardInterface" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 11 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 11 190 3 "FUNCTION"
C L "usb_isr_tkn_setup_StandardEndpoint" 11 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardEndpoint" 11 688 "void()"
C L "usb_Get_Descriptor" 11 190 26 "FUNCTION"
F G "usb_Get_Descriptor" 11 786 "void()"
C L "usb_Get_Descriptor" 11 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 11 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 11 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 11 190 1 "FUNCTION"
C L "usb_finish_set_address" 11 190 11 "FUNCTION"
F G "usb_finish_set_address" 11 857 "void()"
C L "usb_finish_set_address" 11 190 1 "FUNCTION"
C L "usb_finish_set_address" 11 190 1 "FUNCTION"
C L "usb_copy_desc_seg_to_ep" 11 190 3 "FUNCTION"
F G "usb_copy_desc_seg_to_ep" 11 874 "void()"
V L "i" 11 875 "int8"
V L "c" 11 876 "int8"
V G "usb_cdc_line_coding" 7 189 "{int32 dwDTERrate,int8 bCharFormat,int8 bParityType,int8 bDataBits}" "length of time, in ms, of break signal as we received in a SendBreak message."
V G "usb_cdc_break" 7 193 "int16"
V G "usb_cdc_encapsulated_cmd" 7 195 "int8[8]"
V G "usb_cdc_put_buffer" 7 197 "int8[64]"
V G "usb_cdc_put_buffer_free" 7 198 "int1"
V G "usb_cdc_put_buffer_nextin" 7 203 "int8"
V G "usb_cdc_get_buffer_status" 7 216 "{int1 got,int8 len,int8 index}"
V G "usb_cdc_get_buffer_status_buffer" 7 218 "int8[64]"
V G "usb_cdc_got_set_line_coding" 7 232 "int1"
V G "usb_cdc_carrier" 7 238 "{int1 dte_present,int1 active,int6 reserved}"
V G "__usb_cdc_state" 7 240 ""
C L "usb_isr_tok_out_cdc_control_dne" 7 185 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_control_dne" 7 246 "void()"
C L "usb_isr_tok_out_cdc_control_dne" 7 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 7 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 7 185 2 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
F G "usb_isr_tkn_cdc" 7 286 "void()" "make sure the request goes to a CDC interface"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 7 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_data_dne" 7 185 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_data_dne" 7 331 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 7 185 1 "FUNCTION"
F G "usb_isr_tok_in_cdc_data_dne" 7 348 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 7 185 5 "FUNCTION"
C L "usb_isr_tok_in_cdc_data_dne" 7 185 1 "FUNCTION"
F G "usb_cdc_flush_out_buffer" 7 364 "void()"
C L "usb_cdc_flush_out_buffer" 7 185 2 "FUNCTION"
F G "usb_cdc_init" 7 374 "void()"
C L "usb_cdc_getc" 7 185 2 "FUNCTION"
F G "usb_cdc_getc" 7 391 "int8()"
V L "c" 7 392 "int8"
V L "c" 7 405 "int8"
F G "usb_cdc_putc_fast" 7 405 "void(int8 c)"
V L "old_gie" 7 406 "int1" "disable global interrupts"
C L "usb_cdc_putc_fast" 7 185 1 "FUNCTION"
C L "usb_cdc_putc_fast" 7 185 1 "FUNCTION"
C L "usb_cdc_putc_fast" 7 185 3 "FUNCTION"
V L "c" 7 431 "int8"
F G "usb_cdc_putc" 7 431 "void(int8 c)"
C L "usb_cdc_putc" 7 185 2 "FUNCTION"
C L "gethex1_usb" 5 2 7 "FUNCTION"
F G "gethex1_usb" 7 444 "int8()"
V L "digit" 7 445 "int8"
F G "gethex_usb" 7 457 "int8()"
V L "lo" 7 458 "int8"
V L "hi" 7 458 "int8"
V L "s" 7 468 "*int8"
V L "max" 7 468 "int8"
F G "get_string_usb" 7 468 "void(*int8 s,int8 max)"
V L "len" 7 469 "int8"
V L "c" 7 470 "int8"
C L "get_string_usb" 7 476 1 "FUNCTION"
C L "get_int_usb" 7 476 2 "FUNCTION"
F G "get_int_usb" 7 497 "sint8()"
V L "s" 7 498 "int8[5]"
V L "i" 7 499 "sint8"
F G "get_long_usb" 7 507 "sint16()"
V L "s" 7 508 "int8[7]"
V L "l" 7 509 "sint16"
F G "get_float_usb" 7 516 "float()"
V L "s" 7 517 "int8[20]"
V L "f" 7 518 "float"
D G "slave_1" 0 14 "0xa0"
D G "slave_2" 0 15 "0xb0"
D G "slave_3" 0 16 "0xc0"
D G "slave_4" 0 17 "0xd0"
D G "slave_5" 0 18 "0xe0"
D G "slave_6" 0 19 "0x10"
D G "slave_7" 0 20 "0x20"
D G "slave_8" 0 21 "0x30"
D G "slave_9" 0 22 "0x40"
V G "chip_v" 0 26 "int8[10][26]"
V G "check_two" 0 27 "int16"
V G "answer" 0 28 "int8"
V G "rcv_chip" 0 29 "int8"
V G "volt_c" 0 30 "int8"
V G "chip_c" 0 30 "int8"
V G "rcv_i" 0 30 "int8"
V G "aux" 0 30 "int8"
F G "Random" 0 32 "void()"
V L "??65535" 0 33 "int8"
F G "Threat_Data" 0 33 "void(int8 )"
V L "??65535" 0 35 "int8"
V L "??65535" 0 35 "int8"
F G "Send_I2C" 0 35 "void(int8 ,int8 )"
F G "MAIN" 0 38 "void()"
C L "MAIN" 0 39 1 "FUNCTION"
C L "MAIN" 0 39 2 "FUNCTION"
C L "MAIN" 0 39 2 "FUNCTION"
F G "Random" 0 62 "void()"
C L "Random" 0 39 1 "FUNCTION"
C L "Random" 0 39 1 "FUNCTION"
C L "Random" 0 39 1 "FUNCTION"
C L "Random" 0 39 1 "FUNCTION"
V L "rcv_chip" 0 150 "int8" "MI DDDD CK ID dddd dddd dddd dddd dddd dddd dddd dddd dddd dddd c ck AA55AA"
F G "Threat_Data" 0 151 "void(int8 rcv_chip)"
C L "Threat_Data" 0 39 1 "FUNCTION"
V L "chip_c" 0 176 "int8"
V L "address" 0 176 "int8"
F G "Send_I2C" 0 177 "void(int8 chip_c,int8 address)"
C L "Send_I2C" 0 39 1 "FUNCTION"
C L "Send_I2C" 0 39 1 "FUNCTION"
C L "Send_I2C" 0 39 1 "FUNCTION"
C L "Send_I2C" 0 39 1 "FUNCTION"
C L "Send_I2C" 0 39 1 "FUNCTION"
C L "Send_I2C" 0 39 1 "FUNCTION"
C L "Send_I2C" 0 39 1 "FUNCTION"
C L "Send_I2C" 0 39 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "i2c_poll" 0 1
